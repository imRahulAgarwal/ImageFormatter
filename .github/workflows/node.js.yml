name: ImageFormatter

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout out the code
        uses: actions/checkout@v4
        with:
            clean: false

  server:
    needs: build
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: "npm"
          cache-dependency-path: server/package-lock.json
      - run: |
          cd server/
          npm ci
          touch .env
          echo "${{ secrets.SERVER_ENV }}" > .env
          pm2 stop imageformatter || true
          pm2 start index.js --name imageformatter

  client:
    needs: build
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        env:
          TARGET_DIR: /var/www/ImageFormatter
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: "npm"
          cache-dependency-path: client/package-lock.json
      - run: |
          cd client/
          npm ci
          touch .env
          echo "${{ secrets.CLIENT_ENV }}" > .env
          npm run build
          if [ ! -d "$TARGET_DIR" ]; then
            sudo mkdir -p "$TARGET_DIR"
          fi
          sudo rsync -av dist/ "$TARGET_DIR"
